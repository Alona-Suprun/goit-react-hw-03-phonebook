{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/FilterContacts/FilterContacts.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/Section/Section.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Button","onClick","allyProps","button","defaultProps","ContactForm","state","name","number","inputChange","e","currentTarget","value","setState","resetForm","checkContact","onCheckContact","props","formSubmit","preventDefault","onSubmit","form","this","label","placeholder","input","type","pattern","required","onChange","Component","ContactList","contacts","onDeleteContact","list","map","id","item","FilterContact","App","filter","addContact","newContact","contact","uuidv4","filterContact","getContactsLis","toLowerCase","includes","inContact","find","alert","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","newContacts","setItem","stringify","contactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbf44c8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2zB8S\",\"label\":\"ContactForm_label__3sDDu\",\"input\":\"ContactForm_input__3zR23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Hd_qg\",\"item\":\"ContactList_item__3tDtz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__wB5JP\",\"input\":\"FilterContacts_input__2FwEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1AKme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Qn8S\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button className={s.button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  inputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  checkContact = () => {\r\n    const { name } = this.state;\r\n    const { onCheckContact } = this.props;\r\n    return onCheckContact(name);\r\n  };\r\n\r\n  formSubmit = e => {\r\n    e.preventDefault();\r\n    const isNoName = this.checkContact();\r\n    if (!isNoName) return;\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.formSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            placeholder=\"type name\"\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.inputChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            placeholder=\"type number\"\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.inputChange}\r\n          />\r\n        </label>\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.item} key={id}>\r\n        {name}: {number}\r\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </Button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './FilterContacts.module.css';\r\n\r\nconst FilterContact = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          title=\"Search contacts\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FilterContact;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section/Section';\nimport Form from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport FilterContact from './components/FilterContacts/FilterContacts';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const newContacts = this.state.contacts;\n    const oldContacts = prevState.contacts;\n\n    if (newContacts !== oldContacts) {\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\n    }\n  }\n\n  addContact = newContact => {\n    const contact = {\n      id: uuidv4(),\n      name: newContact.name,\n      number: newContact.number,\n    };\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  filterContact = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContactsLis = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  checkContact = name => {\n    const { contacts } = this.state;\n    const inContact = !!contacts.find(contact => contact.name === name);\n    inContact && alert(name + 'is already in contacts');\n    return !inContact;\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const contactsList = this.getContactsLis();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Section>\n          <Form onSubmit={this.addContact} onCheckContact={this.checkContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterContact\n            value={this.state.filter}\n            onChange={this.filterContact}\n          />\n          <ContactList\n            contacts={contactsList}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}